name: Build and Push Docker Image

on:
  push:
    branches:
      - main # Ou sua branch padrão
    tags:
      - \'v*.*.*\' # Dispara em tags como v1.0.0
  pull_request:
    branches:
      - main # Ou sua branch padrão

env:
  REGISTRY: ghcr.io
  # Constrói o nome da imagem a partir do nome do usuário/organização e nome do repositório
  # Ex: ghcr.io/emanueleborges/fiaptechchallenge
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Necessário para enviar pacotes (imagens Docker) para GHCR

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx # Adicionado ID para referenciar o output
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Gera a tag \'latest\' para pushes na branch padrão
            type=raw,value=latest,enable={{is_default_branch}}
            # Gera tags baseadas em eventos ref (branch, tag, pr)
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            # Gera tag com o SHA do commit (curto)
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          builder: ${{ steps.buildx.outputs.name }} # Especifica o builder
          cache-from: type=gha
          cache-to: type=gha,mode=max
