stages:
  - build
  - push

variables:
  # Replace with your registry details if not using GitLab's integrated registry
  # For GitLab registry, CI_REGISTRY_IMAGE is usually $CI_REGISTRY/$CI_PROJECT_PATH
  # Example: registry.gitlab.com/your-username/your-project
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest
  IMAGE_TAG_COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build_image:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $IMAGE_TAG_COMMIT -t $IMAGE_TAG_LATEST .
    - docker push $IMAGE_TAG_COMMIT
    - docker push $IMAGE_TAG_LATEST
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH # Only run for the default branch
    - if: $CI_COMMIT_TAG # Also run for tags

# Optional: If you want to push only tagged versions to a "release" tag
# push_tagged_release:
#   stage: push
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - docker pull $IMAGE_TAG_COMMIT
#     - docker tag $IMAGE_TAG_COMMIT $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
#     - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
#   rules:
#     - if: $CI_COMMIT_TAG
